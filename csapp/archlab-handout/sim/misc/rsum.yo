0x000:                      |     .pos 0x0
0x000: 30f40002000000000000 |     irmovq stack,%rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | # list
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0x0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1,%rdi
0x052: 30f00000000000000000 |     irmovq 0x0,%rax
0x05c: 80a000000000000000   |     call judge
0x065: 90                   |     ret
0x066:                      | rsum_list:
0x066: 50370000000000000000 |     mrmovq (%rdi),%rbx
0x070: 50770800000000000000 |     mrmovq 8(%rdi),%rdi
0x07a: a03f                 |     pushq %rbx
0x07c: 80a000000000000000   |     call judge
0x085: b03f                 |     popq %rbx
0x087: 6030                 |     addq %rbx,%rax
0x089: 90                   |     ret
                            |      
0x08a:                      | test:
0x08a: 6277                 |     andq %rdi, %rdi
0x08c: 746600000000000000   |     jne rsum_list
0x095: 30f00000000000000000 |     irmovq $0x0,%rax
0x09f: 90                   |     ret
0x0a0:                      | judge:
0x0a0: 808a00000000000000   |     call test
0x0a9: 90                   |     ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack:
                            | 
