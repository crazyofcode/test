                            | # Execution begins at address 0
0x000:                      |     .pos 0x0
0x000: 30f40002000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | # list
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: f000000000000000     |     .quad 0x0f0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000b000000000000     |     .quad 0xb00
0x040: 0000000000000000     |     .quad 0x0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1,%rdi
0x052: 805c00000000000000   |     call sum_list
0x05b: 90                   |     ret
0x05c:                      | sum_list:
0x05c: 30f00000000000000000 |     irmovq $0,%rax
0x066: 30f80800000000000000 |     irmovq $8,%r8
0x070: 709100000000000000   |     jmp test
                            | 
0x079:                      | loop:
0x079: 50670000000000000000 |     mrmovq (%rdi),%rsi
0x083: 6060                 |     addq %rsi,%rax
0x085: 6087                 |     addq %r8,%rdi
0x087: 50770000000000000000 |     mrmovq (%rdi),%rdi
0x091:                      | test:
0x091: 6277                 |     andq %rdi,%rdi 
0x093: 747900000000000000   |     jne loop
0x09c: 90                   |     ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack:
                            | 
